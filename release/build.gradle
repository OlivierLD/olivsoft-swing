plugins {
  id 'java'
  id 'maven'
  id 'com.github.johnrengelman.shadow' // version '5.0.0'
}
compileJava.options.encoding = 'ISO-8859-1'

group = 'oliv.cool.stuff'
version = '4.0.0.0'

repositories {
  mavenCentral()
  maven { url "https://raw.githubusercontent.com/OlivierLD/raspberry-coffee/repository" }
  maven { url "http://www.datanucleus.org/downloads/maven2" }
  maven { url "https://oss.sonatype.org/content/groups/public" }
  maven { url "http://lediouris.net/maven2" }
  mavenLocal()
}

dependencies {
  compile project(':navigation-desktop')
  compile project(':navigation-desktop-user-exits')
  compile project(':weatherwizard')
  compile project(':ww-user-exits:WW-UserExits')
  compile project(':ww-user-exits:WW-UserExits_II')
//compile project(':ww-user-exits:WW-UserExits_Processing')
  compile project(':ww-user-exits:WW-UserExit_Dustlets')
  compile project(':ww-user-exits:WW-UserExit_CurrentDustlet')
}

shadowJar {
  zip64 true
}

//task copyResources(type: Copy) {
//  description = 'Copies non-java resources in the output directory before the jar task (png, xml, xsd, ttf, properties, etc)'
//  from 'src'
//  into 'build/classes/main'
//  include '**/*.xml', '**/*.xsd', '**/*.png', '**/*.gif', '**/*.jpg', '**/*.properties', '**/*.ttf', '**/*.html', '**/background/*.*'
//}
//
//jar.dependsOn(copyResources)

//task tellMeProxy (description: "Spits out the proxy settings.") << {
//  try {
//    println "Accessing resources with proxy $proxyHost:$proxyPort"
//    println "UserProfile: " + System.getenv()['USERPROFILE']
//  } catch (Exception e) {
//    println "No proxy"
//  }
//}
//
//compileJava.dependsOn(tellMeProxy)

//task runWW(type: JavaExec, dependsOn: build, description: "Weather Wizard test run.") {
//  main = 'main.splash.Splasher'
////jvmArgs "-verbose"
//  classpath project.configurations.default
//  classpath sourceSets.main.output.classesDir
//}
//
//task runDesktop(type: JavaExec, dependsOn: build, description: "Desktop test run.") {
//  main = 'olivsoftdesktop.OlivSoftDesktop'
////jvmArgs "-verbose"
//  classpath project.configurations.default
//  classpath sourceSets.main.output.classesDir
//}
